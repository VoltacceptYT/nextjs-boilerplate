{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/items.ts"],"sourcesContent":["export type Item = {\n  name: string;\n  damage?: number;\n  defense?: number;\n  description: string;\n  rarity?: 'common' | 'magic' | 'rare' | 'unique' | 'set';\n  setName?: string;\n  value?: number;\n};\n\nexport const sampleItems: Item[] = [\n  { \n    name: \"Rusty Sword\", \n    damage: 10, \n    description: \"An old, worn-out sword with minimal cutting power.\",\n    rarity: 'common',\n    value: 25\n  },\n  { \n    name: \"Wooden Shield\", \n    defense: 5, \n    description: \"Provides minimal protection against attacks.\",\n    rarity: 'common',\n    value: 15\n  },\n  { \n    name: \"Health Potion\", \n    description: \"Restores 50 health points when consumed.\",\n    rarity: 'common',\n    value: 50\n  },\n  { \n    name: \"Magic Dagger\", \n    damage: 15, \n    description: \"A mystical blade that glows with arcane energy.\",\n    rarity: 'magic',\n    value: 100\n  },\n  { \n    name: \"Iron Helmet\", \n    defense: 8, \n    description: \"Sturdy headgear forged from quality iron.\",\n    rarity: 'common',\n    value: 30\n  },\n  { \n    name: \"Mana Potion\", \n    description: \"Restores 30 mana points for spellcasters.\",\n    rarity: 'common',\n    value: 40\n  }\n];\n\n// Unique Items\nexport const uniqueItems: Item[] = [\n  {\n    name: \"The Butcher's Cleaver\",\n    damage: 25,\n    description: \"A massive cleaver once wielded by the legendary Butcher. Dripping with ancient blood.\",\n    rarity: 'unique',\n    value: 5000\n  },\n  {\n    name: \"Griswold's Edge\",\n    damage: 30,\n    description: \"A finely crafted sword from the legendary blacksmith Griswold.\",\n    rarity: 'unique',\n    value: 7500\n  },\n  {\n    name: \"Arkaine's Valor\",\n    defense: 45,\n    description: \"An ancient armor blessed by the archangel Arkaine himself.\",\n    rarity: 'unique',\n    value: 10000\n  },\n  {\n    name: \"The Oculus\",\n    description: \"A powerful magical orb that enhances spellcasting abilities.\",\n    rarity: 'unique',\n    value: 8000\n  },\n  {\n    name: \"Windforce\",\n    damage: 35,\n    description: \"A legendary bow that fires arrows with the force of a hurricane.\",\n    rarity: 'unique',\n    value: 12000\n  }\n];\n\n// Set Items\nexport const setItems: Item[] = [\n  {\n    name: \"Sigon's Visor\",\n    defense: 20,\n    description: \"Part of Sigon's Complete Steel set. A sturdy helmet.\",\n    rarity: 'set',\n    setName: \"Sigon's Complete Steel\",\n    value: 2000\n  },\n  {\n    name: \"Sigon's Guard\",\n    defense: 25,\n    description: \"Part of Sigon's Complete Steel set. A protective shield.\",\n    rarity: 'set',\n    setName: \"Sigon's Complete Steel\",\n    value: 2500\n  },\n  {\n    name: \"Sigon's Sabot\",\n    defense: 15,\n    description: \"Part of Sigon's Complete Steel set. Heavy boots.\",\n    rarity: 'set',\n    setName: \"Sigon's Complete Steel\",\n    value: 1800\n  },\n  {\n    name: \"Civerb's Cudgel\",\n    damage: 20,\n    description: \"Part of Civerb's Vestments set. A blessed mace.\",\n    rarity: 'set',\n    setName: \"Civerb's Vestments\",\n    value: 3000\n  },\n  {\n    name: \"Civerb's Ward\",\n    defense: 30,\n    description: \"Part of Civerb's Vestments set. A holy shield.\",\n    rarity: 'set',\n    setName: \"Civerb's Vestments\",\n    value: 3500\n  }\n];\n\n// All items combined for random drops\nexport const allItems = [...sampleItems, ...uniqueItems, ...setItems];\n"],"names":[],"mappings":";;;;;;AAUO,MAAM,cAAsB;IACjC;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,QAAQ;QACR,OAAO;IACT;CACD;AAGM,MAAM,cAAsB;IACjC;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,aAAa;QACb,QAAQ;QACR,OAAO;IACT;IACA;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,OAAO;IACT;CACD;AAGM,MAAM,WAAmB;IAC9B;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA;QACE,MAAM;QACN,QAAQ;QACR,aAAa;QACb,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA;QACE,MAAM;QACN,SAAS;QACT,aAAa;QACb,QAAQ;QACR,SAAS;QACT,OAAO;IACT;CACD;AAGM,MAAM,WAAW;OAAI;OAAgB;OAAgB;CAAS","debugId":null}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/gameState.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useState, ReactNode } from \"react\";\nimport { sampleItems, type Item } from \"./items\";\n\nexport type CharacterClass = {\n  name: string;\n  description: string;\n  baseHealth: number;\n  baseMana: number;\n  baseStrength: number;\n  baseDexterity: number;\n  baseVitality: number;\n  baseEnergy: number;\n};\n\nexport interface Equipment {\n  helmet?: Item;\n  armor?: Item;\n  weapon?: Item;\n  shield?: Item;\n  gloves?: Item;\n  boots?: Item;\n  belt?: Item;\n  ring1?: Item;\n  ring2?: Item;\n  amulet?: Item;\n}\n\nexport interface GameState {\n  character: CharacterClass | null;\n  inventory: Item[];\n  equipment: Equipment;\n  stash: Item[];\n  gold: number;\n  health: number;\n  mana: number;\n  level: number;\n  experience: number;\n  setCharacter: (char: CharacterClass) => void;\n  addItem: (item: Item) => void;\n  removeItem: (index: number) => void;\n  equipItem: (item: Item, slot: keyof Equipment) => void;\n  unequipItem: (slot: keyof Equipment) => void;\n  addToStash: (item: Item) => void;\n  removeFromStash: (index: number) => void;\n  updateHealth: (newHealth: number) => void;\n  updateMana: (newMana: number) => void;\n  addGold: (amount: number) => void;\n  spendGold: (amount: number) => boolean;\n}\n\nconst GameStateContext = createContext<GameState | undefined>(undefined);\n\nexport function GameStateProvider({ children }: { children: ReactNode }) {\n  const [character, setCharacterState] = useState<CharacterClass | null>(null);\n  const [inventory, setInventory] = useState<Item[]>(sampleItems);\n  const [equipment, setEquipment] = useState<Equipment>({});\n  const [stash, setStash] = useState<Item[]>([]);\n  const [gold, setGold] = useState(1000);\n  const [health, setHealth] = useState(100);\n  const [mana, setMana] = useState(50);\n  const [level, setLevel] = useState(1);\n  const [experience, setExperience] = useState(0);\n\n  const setCharacter = (char: CharacterClass) => {\n    setCharacterState(char);\n    setHealth(char.baseHealth);\n    setMana(char.baseMana);\n  };\n\n  const addItem = (item: Item) => {\n    setInventory((prev) => [...prev, item]);\n  };\n\n  const removeItem = (index: number) => {\n    setInventory((prev) => prev.filter((_, i) => i !== index));\n  };\n\n  const equipItem = (item: Item, slot: keyof Equipment) => {\n    // Remove from inventory\n    const itemIndex = inventory.findIndex(invItem => invItem === item);\n    if (itemIndex !== -1) {\n      setInventory(prev => prev.filter((_, i) => i !== itemIndex));\n    }\n    \n    // Unequip current item if exists\n    const currentEquipped = equipment[slot];\n    if (currentEquipped) {\n      setInventory(prev => [...prev, currentEquipped]);\n    }\n    \n    // Equip new item\n    setEquipment(prev => ({ ...prev, [slot]: item }));\n  };\n\n  const unequipItem = (slot: keyof Equipment) => {\n    const item = equipment[slot];\n    if (item) {\n      setInventory(prev => [...prev, item]);\n      setEquipment(prev => ({ ...prev, [slot]: undefined }));\n    }\n  };\n\n  const addToStash = (item: Item) => {\n    setStash(prev => [...prev, item]);\n  };\n\n  const removeFromStash = (index: number) => {\n    setStash(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const addGold = (amount: number) => {\n    setGold(prev => prev + amount);\n  };\n\n  const spendGold = (amount: number) => {\n    if (gold >= amount) {\n      setGold(prev => prev - amount);\n      return true;\n    }\n    return false;\n  };\n\n  const updateHealth = (newHealth: number) => {\n    setHealth(Math.max(0, Math.min(newHealth, character?.baseHealth || 100)));\n  };\n\n  const updateMana = (newMana: number) => {\n    setMana(Math.max(0, Math.min(newMana, character?.baseMana || 50)));\n  };\n\n  return (\n    <GameStateContext.Provider \n      value={{ \n        character, \n        inventory, \n        equipment,\n        stash,\n        gold,\n        health, \n        mana, \n        level, \n        experience,\n        setCharacter, \n        addItem, \n        removeItem,\n        equipItem,\n        unequipItem,\n        addToStash,\n        removeFromStash,\n        updateHealth,\n        updateMana,\n        addGold,\n        spendGold\n      }}\n    >\n      {children}\n    </GameStateContext.Provider>\n  );\n}\n\nexport function useGameState() {\n  const context = useContext(GameStateContext);\n  if (context === undefined) {\n    throw new Error(\"useGameState must be used within a GameStateProvider\");\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}