{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/MapArea.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useGameState } from \"@/lib/gameState\";\nimport { sampleItems } from \"@/lib/items\";\n\ntype Tile = {\n  id: number;\n  name: string;\n  description: string;\n  type: 'empty' | 'enemy' | 'treasure' | 'town' | 'dungeon';\n  explored: boolean;\n};\n\nconst generateMap = (): Tile[] => {\n  const tiles: Tile[] = [];\n  const types: Tile['type'][] = ['empty', 'enemy', 'treasure', 'town', 'dungeon'];\n  \n  for (let i = 0; i < 25; i++) {\n    let type: Tile['type'] = 'empty';\n    \n    // Special tiles\n    if (i === 12) type = 'town'; // Center tile is town\n    else if (i === 0 || i === 4 || i === 20 || i === 24) type = 'dungeon'; // Corners are dungeons\n    else {\n      const rand = Math.random();\n      if (rand < 0.3) type = 'enemy';\n      else if (rand < 0.4) type = 'treasure';\n      else type = 'empty';\n    }\n    \n    tiles.push({\n      id: i,\n      name: getTileName(type, i),\n      description: getTileDescription(type),\n      type,\n      explored: i === 12 // Town starts explored\n    });\n  }\n  \n  return tiles;\n};\n\nconst getTileName = (type: Tile['type'], id: number): string => {\n  switch (type) {\n    case 'town': return 'Rogue Encampment';\n    case 'dungeon': return `Ancient Dungeon ${Math.floor(id / 5) + 1}`;\n    case 'enemy': return 'Monster Den';\n    case 'treasure': return 'Hidden Cache';\n    default: return `Wilderness ${id + 1}`;\n  }\n};\n\nconst getTileDescription = (type: Tile['type']): string => {\n  switch (type) {\n    case 'town': return 'A safe haven where heroes gather and merchants trade.';\n    case 'dungeon': return 'Dark corridors filled with ancient evils and forgotten treasures.';\n    case 'enemy': return 'Dangerous creatures lurk in this area.';\n    case 'treasure': return 'Something valuable might be hidden here.';\n    default: return 'An empty stretch of wilderness.';\n  }\n};\n\nconst getTileColor = (type: Tile['type'], explored: boolean): string => {\n  if (!explored) return 'bg-gray-800 text-gray-400';\n  \n  switch (type) {\n    case 'town': return 'bg-green-500/20 text-green-400 border-green-500';\n    case 'dungeon': return 'bg-purple-500/20 text-purple-400 border-purple-500';\n    case 'enemy': return 'bg-red-500/20 text-red-400 border-red-500';\n    case 'treasure': return 'bg-yellow-500/20 text-yellow-400 border-yellow-500';\n    default: return 'bg-blue-500/10 text-blue-400 border-blue-500';\n  }\n};\n\nexport default function MapArea() {\n  const [tiles, setTiles] = useState<Tile[]>(generateMap());\n  const [selectedTile, setSelectedTile] = useState<Tile | null>(null);\n  const [playerPosition, setPlayerPosition] = useState(12); // Start at town\n  const { addItem, updateHealth, health, character } = useGameState();\n\n  const exploreTile = (tile: Tile) => {\n    if (!tile.explored) {\n      setTiles(prev => prev.map(t => \n        t.id === tile.id ? { ...t, explored: true } : t\n      ));\n    }\n    setSelectedTile(tile);\n  };\n\n  const moveToTile = (tileId: number) => {\n    const tile = tiles[tileId];\n    if (!tile.explored) {\n      exploreTile(tile);\n    }\n    \n    setPlayerPosition(tileId);\n    \n    // Handle tile events\n    switch (tile.type) {\n      case 'enemy':\n        if (Math.random() < 0.7) {\n          const damage = Math.floor(Math.random() * 15) + 5;\n          updateHealth(health - damage);\n          alert(`You encountered enemies and took ${damage} damage!`);\n        }\n        break;\n      case 'treasure':\n        if (Math.random() < 0.5) {\n          const randomItem = sampleItems[Math.floor(Math.random() * sampleItems.length)];\n          addItem(randomItem);\n          alert(`You found: ${randomItem.name}!`);\n        }\n        break;\n      case 'town':\n        if (character) {\n          updateHealth(character.baseHealth);\n          alert('You rest in town and restore your health.');\n        }\n        break;\n    }\n  };\n\n  const canMoveTo = (tileId: number): boolean => {\n    const row = Math.floor(playerPosition / 5);\n    const col = playerPosition % 5;\n    const targetRow = Math.floor(tileId / 5);\n    const targetCol = tileId % 5;\n    \n    // Can only move to adjacent tiles (including diagonals)\n    return Math.abs(row - targetRow) <= 1 && Math.abs(col - targetCol) <= 1;\n  };\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n      {/* Map Grid */}\n      <div className=\"lg:col-span-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>World Map</CardTitle>\n            <CardDescription>\n              Explore the dark world of Sanctuary. Click adjacent tiles to move.\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-5 gap-2 mb-4\">\n              {tiles.map((tile) => (\n                <div\n                  key={tile.id}\n                  className={`\n                    relative p-3 border-2 rounded-lg text-center cursor-pointer transition-all text-xs\n                    ${getTileColor(tile.type, tile.explored)}\n                    ${playerPosition === tile.id ? 'ring-2 ring-primary' : ''}\n                    ${canMoveTo(tile.id) && playerPosition !== tile.id ? 'hover:scale-105' : ''}\n                    ${!tile.explored ? 'hover:bg-gray-700' : ''}\n                  `}\n                  onClick={() => {\n                    if (canMoveTo(tile.id)) {\n                      moveToTile(tile.id);\n                    } else {\n                      exploreTile(tile);\n                    }\n                  }}\n                >\n                  {playerPosition === tile.id && (\n                    <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-primary rounded-full\"></div>\n                  )}\n                  <div className=\"font-bold\">\n                    {tile.explored ? tile.name : '???'}\n                  </div>\n                  {tile.explored && (\n                    <div className=\"text-xs opacity-75 mt-1\">\n                      {tile.type}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"text-sm text-muted-foreground\">\n              <p>• Green circle indicates your current position</p>\n              <p>• You can only move to adjacent tiles</p>\n              <p>• Unexplored areas are marked with ???</p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Tile Details */}\n      <div className=\"lg:col-span-1\">\n        <Card className=\"sticky top-4\">\n          <CardHeader>\n            <CardTitle>Location Details</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {selectedTile ? (\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-lg font-bold\">{selectedTile.name}</h3>\n                  <p className=\"text-sm text-muted-foreground capitalize\">\n                    {selectedTile.type}\n                  </p>\n                </div>\n\n                <p className=\"text-sm\">{selectedTile.description}</p>\n\n                {selectedTile.explored && (\n                  <div className=\"space-y-2\">\n                    {selectedTile.type === 'enemy' && (\n                      <div className=\"p-2 bg-red-500/20 rounded text-red-400 text-sm\">\n                        Dangerous creatures roam this area\n                      </div>\n                    )}\n                    {selectedTile.type === 'treasure' && (\n                      <div className=\"p-2 bg-yellow-500/20 rounded text-yellow-400 text-sm\">\n                        Search carefully for hidden treasures\n                      </div>\n                    )}\n                    {selectedTile.type === 'town' && (\n                      <div className=\"p-2 bg-green-500/20 rounded text-green-400 text-sm\">\n                        Safe haven - health restored\n                      </div>\n                    )}\n                    {selectedTile.type === 'dungeon' && (\n                      <div className=\"p-2 bg-purple-500/20 rounded text-purple-400 text-sm\">\n                        Ancient evil lurks in the depths\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {canMoveTo(selectedTile.id) && playerPosition !== selectedTile.id && (\n                  <Button \n                    onClick={() => moveToTile(selectedTile.id)}\n                    className=\"w-full\"\n                  >\n                    Move Here\n                  </Button>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-8 text-muted-foreground\">\n                <p>Click on a tile to view details</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/game/GameNav.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport { useGameState } from \"@/lib/gameState\";\nimport { Button } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport default function GameNav() {\n  const pathname = usePathname();\n  const { character, health, mana } = useGameState();\n\n  if (!character) {\n    return null;\n  }\n\n  const navItems = [\n    { href: \"/map\", label: \"Map\" },\n    { href: \"/inventory\", label: \"Inventory\" },\n    { href: \"/battle\", label: \"Battle\" },\n  ];\n\n  return (\n    <div className=\"mb-8\">\n      {/* Character Status Bar */}\n      <div className=\"bg-card border rounded-lg p-4 mb-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-6\">\n            <div>\n              <h3 className=\"font-bold text-lg\">{character.name}</h3>\n              <p className=\"text-sm text-muted-foreground\">Level 1</p>\n            </div>\n            <div className=\"flex space-x-4\">\n              <div>\n                <div className=\"text-sm font-medium\">Health</div>\n                <div className=\"w-32 bg-secondary rounded-full h-3\">\n                  <div \n                    className=\"bg-red-500 h-3 rounded-full transition-all duration-300\"\n                    style={{ width: `${(health / character.baseHealth) * 100}%` }}\n                  />\n                </div>\n                <div className=\"text-xs text-center\">{health}/{character.baseHealth}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium\">Mana</div>\n                <div className=\"w-32 bg-secondary rounded-full h-3\">\n                  <div \n                    className=\"bg-blue-500 h-3 rounded-full transition-all duration-300\"\n                    style={{ width: `${(mana / character.baseMana) * 100}%` }}\n                  />\n                </div>\n                <div className=\"text-xs text-center\">{mana}/{character.baseMana}</div>\n              </div>\n            </div>\n          </div>\n          <Link href=\"/\">\n            <Button variant=\"outline\" size=\"sm\">\n              New Character\n            </Button>\n          </Link>\n        </div>\n      </div>\n\n      {/* Navigation Menu */}\n      <nav className=\"flex justify-center space-x-2\">\n        {navItems.map((item) => (\n          <Link key={item.href} href={item.href}>\n            <Button\n              variant={pathname === item.href ? \"default\" : \"outline\"}\n              className={cn(\n                \"transition-all\",\n                pathname === item.href && \"bg-primary text-primary-foreground\"\n              )}\n            >\n              {item.label}\n            </Button>\n          </Link>\n        ))}\n      </nav>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;AASe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,eAAY,AAAD;IAE/C,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,MAAM,WAAW;QACf;YAAE,MAAM;YAAQ,OAAO;QAAM;QAC7B;YAAE,MAAM;YAAc,OAAO;QAAY;QACzC;YAAE,MAAM;YAAW,OAAO;QAAS;KACpC;IAED,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;;sDACC,6LAAC;4CAAG,WAAU;sDAAqB,UAAU,IAAI;;;;;;sDACjD,6LAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAE/C,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAI,WAAU;8DAAsB;;;;;;8DACrC,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDACC,WAAU;wDACV,OAAO;4DAAE,OAAO,GAAG,AAAC,SAAS,UAAU,UAAU,GAAI,IAAI,CAAC,CAAC;wDAAC;;;;;;;;;;;8DAGhE,6LAAC;oDAAI,WAAU;;wDAAuB;wDAAO;wDAAE,UAAU,UAAU;;;;;;;;;;;;;sDAErE,6LAAC;;8DACC,6LAAC;oDAAI,WAAU;8DAAsB;;;;;;8DACrC,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDACC,WAAU;wDACV,OAAO;4DAAE,OAAO,GAAG,AAAC,OAAO,UAAU,QAAQ,GAAI,IAAI,CAAC,CAAC;wDAAC;;;;;;;;;;;8DAG5D,6LAAC;oDAAI,WAAU;;wDAAuB;wDAAK;wDAAE,UAAU,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;sCAIrE,6LAAC,+JAAA,CAAA,UAAI;4BAAC,MAAK;sCACT,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;0CAAK;;;;;;;;;;;;;;;;;;;;;;0BAQ1C,6LAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;wBAAiB,MAAM,KAAK,IAAI;kCACnC,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAS,aAAa,KAAK,IAAI,GAAG,YAAY;4BAC9C,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kBACA,aAAa,KAAK,IAAI,IAAI;sCAG3B,KAAK,KAAK;;;;;;uBARJ,KAAK,IAAI;;;;;;;;;;;;;;;;AAe9B;GAzEwB;;QACL,qIAAA,CAAA,cAAW;QACQ,2HAAA,CAAA,eAAY;;;KAF1B","debugId":null}},
    {"offset": {"line": 893, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/map/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport MapArea from \"@/components/game/MapArea\";\nimport GameNav from \"@/components/game/GameNav\";\n\nexport default function MapPage() {\n  return (\n    <main className=\"min-h-screen bg-background text-foreground p-8\">\n      <div className=\"container mx-auto max-w-7xl\">\n        <GameNav />\n        \n        <div className=\"mb-6\">\n          <h1 className=\"text-3xl font-bold mb-2\">World Map</h1>\n          <p className=\"text-muted-foreground\">\n            Explore the dark world of Sanctuary and uncover its secrets\n          </p>\n        </div>\n        \n        <MapArea />\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,wIAAA,CAAA,UAAO;;;;;8BAER,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;8BAKvC,6LAAC,wIAAA,CAAA,UAAO;;;;;;;;;;;;;;;;AAIhB;KAjBwB","debugId":null}}]
}